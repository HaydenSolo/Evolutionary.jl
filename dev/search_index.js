var documenterSearchIndex = {"docs":
[{"location":"#Evolutionary.jl-1","page":"Home","title":"Evolutionary.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"The package Evolutionary aims to provide a library for evolutionary optimization. It provides implementation of (murho  stackrel+ lambda)-Evolution Strategy, (mumu_I lambda)-Covariance Matrix Adaptation Evolution Strategy and Genetic Algorithms, as well as a rich set of mutation, recombination, crossover and selection functions.","category":"page"},{"location":"#Getting-started-1","page":"Home","title":"Getting started","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"To install the package just type","category":"page"},{"location":"#","page":"Home","title":"Home","text":"] add Evolutionary","category":"page"},{"location":"#","page":"Home","title":"Home","text":"A simple example of using the GA algorithm to solve a benchmark problem, OneMax (a simple problem consisting in maximizing the number of ones of a bitstring).","category":"page"},{"location":"#","page":"Home","title":"Home","text":"using Evolutionary, Random\nRandom.seed!(9874984737484);\nindividualSize = 100 # chromosome size\nbest, _ = optimize(\n        x -> 1 / sum(x),                 # Function to MINIMIZE\n        GA(                              # Algorithm: GA\n            N = individualSize,          # Length of chromosome\n            initPopulation = (N -> BitArray(rand(Bool, N))),\n            selection = tournament(3),\n            mutation =  flip,\n            crossover = singlepoint,\n            mutationRate = 0.1,\n            crossoverRate = 0.1,\n            tolIter = 20,\n            populationSize = 100\n        ),\n        iterations = 3000);\nsum(best) == individualSize","category":"page"},{"location":"#Methods-1","page":"Home","title":"Methods","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Methods Description\nGA Isometric mapping\nES Evolution Strategy\nCMAES Covariance Matrix Adaptation Evolution Strategy","category":"page"}]
}
